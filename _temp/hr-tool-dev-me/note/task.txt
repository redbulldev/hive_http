1: thống kê theo yêu cầu -> thống kê theo CV (Reports)

- Bộ lọc thông tin:


*table
- request 
- users
- positions



-----------------------------------------------------------------------
*column
- Bảng xếp hạng số lượng nhân sự đã tuyển:
column: vị trí(ex:java), số lượng(13)

*table
positions, 


-----------------------------------------------------------------------
*column
- Biểu đồ Đơn ứng tuyển/qua phỏng vấn:
column: phòng ban(ex:sales), đơn ứng tuyển(30), pass phỏng vấn(16)

*table
- request 
- dự kiến column 
19  interview_cv    int         Yes 0   CV được tham gia phỏng vấn;120     
20  pass_cv         int         Yes 0   Số lượng CV pass phỏng vấn;40
-----------------------------------------------------------------------
*column
- Bảng thống kê:


*table


------------------------------
*struct data trả về 

{
    'status' => 'success',
    "summary": {
        "target": "154",
        ...
    },
    "department": {
        "labels": [
            "Sales",
            ...
        ],
        "values": [
            "106",
            ...
        ],
        "colors": [
            "#9e0211"
            ...
        ]
    },
    "data": [
        {
            "positions_title": "Test",
        ...
        }
    ],
    "total": 13,
    'time' => time()
}


///////////////////////////////////////////////////////////////////////////////////////////
2: task "qui đổi điểm"



*table 
- level, positions,  level_positions

//theo như bàn bạc với mai huy thái thì tạo thêm table level_positions 
với logic người  dùng tạo vị trí chon trình độ(mutible), như vậy ta thêm table level_positions  để tạo mối quan hệ n-n
- ở table positions thêm trường point(1) 
- ở màn hình  sửa thì điểm admin tự set 

+ với logic trên ta giải quết task "qui đổi điểm" với logic chỉ get những  trường mà ở phần tạo mới position có chọn trình độ như vậy với tất cacr các trình độ ta get ra 
//ở đây có thể ta phân theo trình độ : intern -> tech lead 


------------------------------
*struct data trả về 

{
    'status' => 'success',
    "data": { 
        "title": //project manager
        [ 
            "positions": [ 
                "java",
                "php",
                "BAC",
                "Test",
                "BOD",
                "Production",
                "Abc"
            ],
            "values": [
                "2",
                "1",
                "1",
                "0",
                "3",
                "1",
                "2"
            ]
        ]
    }
}



///////////////////////////////////////////////////////////////////////////////////////////
3: task hiển thị data last_level 

link:
http://localhost:3000/cv/15490?limit=10&page=1

api:
http://localhost:3009/v1/cv/15490?limit=10&page=1

với last_level_id hiển thị data last_level tương ứng ở tab interview







///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

*đơn ứng tuyển / pass phỏng vấn 
/crud/add/cv_review_interview.php


join: positions -> request -> cv


- đơn ứng tuyển 
'review_physiognomy1' => ['title' => 'Physiognomy 1', 'current' => 2, 'step' => 1, 'old' => 'HR Review'],

'review_physiognomy2' => ['title' => 'Physiognomy 2', 'current' => 6, 'step' => 5, 'old' => 'HR Tech Interview'],


'step' => 1: đơn ứng tuyển 

'step' => 5: pass phỏng vấn 



- pass phỏng vấn 
join: positions -> request -> cv --> count data






////////////////////////////////////////////////

/////////////////////////
*tư vấn của anh nam
-  bảng xếp hạng số lượng đã tuyển
SELECT position_id, count(*) FROM `cv` WHERE step >5 and isdelete = 0 group by position_id;


- thêm 1 trường vào table positions_requester để quy định user nào được xem , user nào nào yêu cầu


- table docs, docs_dynamic để định nghĩa swagger 





///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

*chức năng import CV


// mô tả chức năng từ design 
yêu cầu
- cấu trúc design nuhuw sau:
Requestor: thaimh - Number: 10 - Deadline: 8/2022
- dữ liệu theo cấu trúc trên lấy từ bảng request 
- tương ứng các column: requestor_id, target, deadline





Xem trước
- hợp lệ(90)
- không hợp lệ(2)

ps: hợp lệ(90) tức là 90 line được insert vào hệ thống 
không hợp lệ(2) tức là 2 line không được insert vào hệ thống 


note: 
- không có nút submit thì khi chọn file thì sẽ import vào hệ thống 
- có nút submit thì khi chọn file và click vào submit thì sẽ import vào hệ thống 



file: 
method/post/import.php


table:
positions
level
request
source
users
cv
cv_history







----------
- các vấn đề cần tìm hiểu 
+ tìm hiểu các thực thi file import.php
+ cách thức hoạt động của nó, chạy từ đâu, cơ chế load tải 
+ liên quan đến table nào, ... 
























//////////////////////////
- tim hieu plan.php
- tim hieu cv.php
+tim hieu cach search: user, deparmant, ..


 hoi Số lượng cần tuyển
 hoi tong hop diem 
hoi tinh ty le offer thanh cong 
doc bao cao tuyn dung 


























