
onboard_cv/target * 100








Tỉ lệ tuyển dụng
interview_cv: qua review 

onboard_cv: tuyen

pass_cv: pass phong van 

total_cv: ung tuyen













*các bảng liên quan đến bug báo cáo thống kê 
positions
level
source
cv
cv_history
cv_offer
cv_onboard
cv_preoffer
cv_probation

*các cột trên đáp ứng được bao nhiêu % các  cột trong bảng `báo cáo tuyển dụng`
// Phòng ban : positions_title  (+)
// Vị trí : department_title  (+)
// Số lượng CV: total_cv
// Số CV tham dự buổi phỏng vấn :  interview_cv  
// Số CV pass phỏng vấn:   pass_cv
// Số UV được offer:  offer_cv 
// Offer thành công :  offer_success  
// Số lượng UV đã đi làm :  onboard_cv
// Tỉ lệ offer/ yêu cầu:  (offer_success/target)  * 100 
// Tỉ lệ onboard/ yêu cầu:  (onboard_cv, target) * 100
// Tỉ lệ onboard/ tỉ lệ offer :  (onboard_cv, offer_success) * 100
// Ngày hoàn thành : item.month/item.year
// Số người fail thử việc: fail_job
// Danh sách UV đi làm: employees
// Trình độ: level  (+)















 SELECT 
        cv.*,
        count(cv.position_id) as cv_position_id,
        -- cv.id,
        -- cv.position_id as cv_position_id,
        -- cv.level_id as cv_level_id,
        positions.id  as position_id,
        level.id as level_id,
        IF(step > 8, cv.fullname, null) as employees,
        cv.datecreate,
        request.day,
        request.month,
        request.year,
        request.deadline,
        cv.step,
        cv.status,
        parent.title as department_title, 
        positions.title as positions_title, 
        level.title as level_title,
        IF(step >= 0, 1, null) as total_cv,
        IF(step > 4, 1, null) as interview_cv,
        IF(step > 5, 1, null) as pass_cv,
        IF(step > 6, 1, null) as offer_cv,
        IF(step > 7, 1, null) as offer_success,
        IF(step > 8, 1, null) as onboard_cv,
        IF(cv.status = 0 and cv.step > 8, 1, null) as fail_job
      FROM cv 
        left join positions on positions.id = cv.position_id
        left join positions as parent on parent.id = positions.parent_id
        left join request on request.id = cv.request_id
        left join level on level.id = cv.level_id
        left join source on source.id = cv.source_id
      WHERE cv.isdelete = 0
--     WHERE cv.id In ($str_report_ids)
      GROUP BY cv.position_id    
      HAVING cv.position_id = positions.id and cv.level_id = level.id
      ;













SELECT 
    -- cv.*,
    cv.id,
    cv.level_id as cv_level_id,
    positions.id  as position_id,
    level.id as level_id,
    IF(step > 8, cv.fullname, null) as employees,
    cv.datecreate,
    request.day,
    request.month,
    request.year,
    request.deadline,
    cv.step,
    cv.status,
    parent.title as department_title, 
    positions.title as positions_title, 
    level.title as level_title,
    IF(step >= 0, 1, 0) as total_cv,
    IF(step > 4, 1, 0) as interview_cv,
    IF(step > 5, 1, 0) as pass_cv,
    IF(step > 6, 1, 0) as offer_cv,
    IF(step > 7, 1, 0) as offer_success,
    IF(step > 8, 1, 0) as onboard_cv,
    IF(cv.status = 0 and cv.step > 8, 1, null) as fail_job
FROM cv 
    left join positions on positions.id = cv.position_id
    left join positions as parent on parent.id = positions.parent_id
    left join request on request.id = cv.request_id
    left join level on level.id = cv.level_id
    left join source on source.id = cv.source_id
WHERE cv.isdelete = 0;
